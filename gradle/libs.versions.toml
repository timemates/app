[versions]
kotlin = "1.8.20"
kotlinx-coroutines = "1.7.1"
kotlinx-serialization = "1.4.1"
ktor = "2.0.1"
kafka = "3.3.1"
jupiter = "5.4.0"
exposed = "0.41.1"
kmongo = "4.8.0"
androidGradlePlugin = "7.3.1"
androidComposeVersion = "2.6.1"
jetbrainsCompose = "1.4.0"
timeMatesSdk = "0.0.2-alpha"
ksp = "1.8.20-1.0.11"
android-target = "34"

[libraries]
kotlinx-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
kotlinx-serialization = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }

ktor-server-core = { module = "io.ktor:ktor-server-core", version.ref = "ktor" }
ktor-server-netty = { module = "io.ktor:ktor-server-netty", version.ref = "ktor" }
ktor-server-cors = { module = "io.ktor:ktor-server-cors", version.ref = "ktor" }
ktor-server-call-logging = { module = "io.ktor:ktor-server-call-logging", version.ref = "ktor" }
ktor-server-websockets = { module = "io.ktor:ktor-server-websockets", version.ref = "ktor" }
ktor-server-statusPages = { module = "io.ktor:ktor-server-status-pages", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-server-content-negotiation = { module = "io.ktor:ktor-server-content-negotiation", version.ref = "ktor" }
ktor-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }

logback-classic = { module = "ch.qos.logback:logback-classic", version.require = "1.3.5" }

litote-kmongo-async = { module = "org.litote.kmongo:kmongo-async", version.ref = "kmongo" }
litote-kmongo-coroutines = { module = "org.litote.kmongo:kmongo-coroutine", version.ref="kmongo" }

junit-kotlin = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" }
junit-jupiter = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "jupiter" }

h2-database = { module = "com.h2database:h2", version.require = "2.1.214" }

exposed-core = { module = "org.jetbrains.exposed:exposed-core", version.ref = "exposed" }
exposed-jdbc = { module = "org.jetbrains.exposed:exposed-jdbc", version.ref = "exposed" }

simple-java-mail = { module = "org.simplejavamail:simple-java-mail", version.require = "7.6.0" }

cache4k = { module = "io.github.reactivecircus.cache4k:cache4k", version.require="0.9.0" }

compose-ui = { module = "androidx.compose.ui:ui", version.ref = "androidComposeVersion" }
compose-foundation = {  module = "androidx.compose.foundation:foundation", version.ref = "androidComposeVersion" }
compose-material3 = { module = "androidx.compose.material3:material3", version.require = "1.1.0-alpha03" }
compose-icons = { module = "androidx.compose.material:material-icons-core", version.ref = "androidComposeVersion" }
compose-extendedIcons = { module = "androidx.compose.material:material-icons-extended", version.ref = "androidComposeVersion" }
compose-activity = { module = "androidx.activity:activity-compose", version.ref = "androidComposeVersion" }
compose-viewmodel = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "androidComposeVersion" }
compose-accompanist-systemUiController = { module = "com.google.accompanist:accompanist-systemuicontroller", version.require = "0.28.0" }

timemates-sdk = { module = "com.github.timemates:sdk", version.ref = "timeMatesSdk" }
timemates-engine-grpc = { module = "com.github.timemates:grpc-engine", version.ref = "timeMatesSdk" }

[plugins]
kotlinx-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlin-js = { id = "org.jetbrains.kotlin.js", version.ref = "kotlin" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
android-library = { id = "com.android.library", version.ref = "androidGradlePlugin" }
android-application = { id = "com.android.library", version.ref = "androidGradlePlugin" }
bundled-publish-library = { id = "publish-library", version.require = "SNAPSHOT" }
compose-multiplatform = { id = "org.jetbrains.compose", version.ref = "jetbrainsCompose" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
koin-configuration = { id = "koin-configuration", version.require = "SNAPSHOT" }
