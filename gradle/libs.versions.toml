[versions]
kotlin = "1.9.0"
kotlinx-coroutines = "1.7.1"
kotlinx-serialization = "1.5.0"
ktor = "2.0.1"
kafka = "3.3.1"
jupiter = "5.8.2"
exposed = "0.41.1"
kmongo = "4.8.0"
androidGradlePlugin = "8.1.0"
androidComposeVersion = "1.5.0-beta03"
jetpackComposeCompilerVersion = "1.5.0"
jetbrainsCompose = "1.5.0-beta01"
timeMatesSdk = "dev-3d2e9b7d5ed0a69ac897a7b819787c0e2823d48f"
ksp = "1.9.0-1.0.12"
android-target = "34"
android-min = "24"
koin = "3.4.2"
koin-annotations = "1.2.2"
decompose = "2.0.0-beta-01"
sqldelight = "2.0.0-alpha05"
moko-resources = "0.23.0"
jna = "5.13.0"
core-ktx = "1.9.0"
junit = "4.13.2"
androidx-test-ext-junit = "1.1.5"
espresso-core = "3.5.1"
material = "1.9.0"

[libraries]
kotlinx-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
kotlinx-serialization = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.require = "0.4.0" }

ktor-server-core = { module = "io.ktor:ktor-server-core", version.ref = "ktor" }
ktor-server-netty = { module = "io.ktor:ktor-server-netty", version.ref = "ktor" }
ktor-server-cors = { module = "io.ktor:ktor-server-cors", version.ref = "ktor" }
ktor-server-call-logging = { module = "io.ktor:ktor-server-call-logging", version.ref = "ktor" }
ktor-server-websockets = { module = "io.ktor:ktor-server-websockets", version.ref = "ktor" }
ktor-server-statusPages = { module = "io.ktor:ktor-server-status-pages", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-server-content-negotiation = { module = "io.ktor:ktor-server-content-negotiation", version.ref = "ktor" }
ktor-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }

logback-classic = { module = "ch.qos.logback:logback-classic", version.require = "1.3.5" }

litote-kmongo-async = { module = "org.litote.kmongo:kmongo-async", version.ref = "kmongo" }
litote-kmongo-coroutines = { module = "org.litote.kmongo:kmongo-coroutine", version.ref="kmongo" }

junit-kotlin = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" }
junit-jupiter = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "jupiter" }

h2-database = { module = "com.h2database:h2", version.require = "2.1.214" }

exposed-core = { module = "org.jetbrains.exposed:exposed-core", version.ref = "exposed" }
exposed-jdbc = { module = "org.jetbrains.exposed:exposed-jdbc", version.ref = "exposed" }

simple-java-mail = { module = "org.simplejavamail:simple-java-mail", version.require = "7.6.0" }

cache4k = { module = "io.github.reactivecircus.cache4k:cache4k", version.require="0.9.0" }

androidx-compose-ui = { module = "androidx.compose.ui:ui", version.ref = "androidComposeVersion" }
androidx-compose-foundation = { module = "androidx.compose.foundation:foundation", version.ref = "androidComposeVersion" }
androidx-compose-material3 = { module = "androidx.compose.material3:material3", version.require = "1.1.1" }
androidx-compose-icons = { module = "androidx.compose.material:material-icons-core", version.ref = "androidComposeVersion" }
androidx-compose-extendedIcons = { module = "androidx.compose.material:material-icons-extended", version.ref = "androidComposeVersion" }
androidx-compose-activity = { module = "androidx.activity:activity-compose", version.require = "1.8.0-alpha06" }
androidx-compose-viewmodel = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "androidComposeVersion" }
androidx-compose-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "jetbrainsCompose" }
androidx-compose-preview = { module = "androidx.compose.ui:ui-tooling-preview", version.require = "jetbrainsCompose" }
compose-accompanist-systemUiController = { module = "com.google.accompanist:accompanist-systemuicontroller", version.require = "0.31.6-rc" }

androidx-lifecycle = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.require = "2.6.1" }

timemates-sdk = { module = "io.timemates:sdk", version.ref = "timeMatesSdk" }
timemates-engine-grpc = { module = "io.timemates:grpc-engine", version.ref = "timeMatesSdk" }
timemates-engine-grpc-android = { module = "io.timemates:grpc-engine-android", version.ref = "timeMatesSdk" }

koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-annotations = { module = "io.insert-koin:koin-annotations", version.ref = "koin-annotations" }
koin-ksp-compiler = { module = "io.insert-koin:koin-ksp-compiler", version.ref = "koin-annotations" }

androidx-appcompat = { module = "androidx.appcompat:appcompat", version.require = "1.7.0-alpha02" }
decompose = { module = "com.arkivanov.decompose:decompose", version.ref = "decompose" }
decompose-jetbrains-compose = { module = "com.arkivanov.decompose:extensions-compose-jetbrains", version.ref = "decompose" }
koin-androidx-compose = { module = "io.insert-koin:koin-androidx-compose", version.require = "3.4.5" }
koin-compose = { module = "io.insert-koin:koin-compose", version.require = "1.0.3" }

kotlin-plugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
android-gradle-plugin = { module = "com.android.tools.build:gradle", version.ref = "androidGradlePlugin" }
compose-multiplatform-plugin = { module = "org.jetbrains.compose:compose-gradle-plugin", version.ref = "jetbrainsCompose" }
ksp-plugin = { module = "com.google.devtools.ksp:symbol-processing-gradle-plugin", version.ref = "ksp" }

moko-resources = { module = "dev.icerock.moko:resources", version.ref = "moko-resources" }
moko-resources-compose = { module = "dev.icerock.moko:resources-compose", version.ref = "moko-resources" }
sqldelight-jvm-driver = { module = "app.cash.sqldelight:sqlite-driver", version.require = "2.0.0-rc02" }
sqldelight-android-driver = { module = "app.cash.sqldelight:android-driver", version.ref = "sqldelight" }
jna-core = { module = "net.java.dev.jna:jna", version.ref = "jna" }
jna-platform = { module = "net.java.dev.jna:jna-platform", version.ref = "jna" }
android-multidex = { module = "androidx.multidex:multidex", version.require = "2.0.1" }

grpc-okhttp = { module = "io.grpc:grpc-okhttp", version.require = "1.56.1" }
core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "core-ktx" }
junit = { group = "junit", name = "junit", version.ref = "junit" }
androidx-test-ext-junit = { group = "androidx.test.ext", name = "junit", version.ref = "androidx-test-ext-junit" }
espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espresso-core" }
material = { group = "com.google.android.material", name = "material", version.ref = "material" }
mockk = { group = "io.mockk", name = "mockk", version.require = "1.13.5" }

[plugins]
kotlinx-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlin-js = { id = "org.jetbrains.kotlin.js", version.ref = "kotlin" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
android-library = { id = "com.android.library", version.ref = "androidGradlePlugin" }
android-application = { id = "com.android.library", version.ref = "androidGradlePlugin" }
bundled-publish-library = { id = "publish-library", version.require = "SNAPSHOT" }
compose-multiplatform = { id = "org.jetbrains.compose", version.ref = "jetbrainsCompose" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
koin-configuration = { id = "koin-configuration", version.require = "SNAPSHOT" }
kotlin-parcelize = { id = "org.jetbrains.kotlin.plugin.parcelize", version.ref = "kotlin" }
cashapp-sqldelight = { id = "app.cash.sqldelight", version.ref = "sqldelight" }
configurations-multiplatform-library = { id = "multiplatform-library-convention", version.require = "SNAPSHOT" }
configurations-compose-multiplatform = { id = "compose-multiplatform-convention", version.require = "SNAPSHOT" }
configurations-koin-annotations = { id = "koin-dependencies-convention", version.require = "SNAPSHOT" }
configurations-unit-tests = { id = "unit-tests-convention", version.require = "SNAPSHOT" }
configurations-unit-tests-mockable = { id = "unit-tests-with-mockk-convention", version.require = "SNAPSHOT" }
configurations-jvm-library = { id = "jvm-library-convention", version.require = "SNAPSHOT" }
moko-multiplatform-resources = { id = "dev.icerock.mobile.multiplatform-resources", version.ref = "moko-resources" }